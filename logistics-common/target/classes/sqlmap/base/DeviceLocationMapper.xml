<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.winterframework.logistics.common.entity.DeviceLocation">
	<resultMap id="BaseResultMap"
		type="com.winterframework.logistics.common.entity.DeviceLocation">
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="device_id" jdbcType="INTEGER" property="deviceId" />
		<result column="order_id" jdbcType="INTEGER" property="orderId" />
		<result column="longitude" jdbcType="DECIMAL" property="longitude" />
		<result column="latitude" jdbcType="DECIMAL" property="latitude" />
		<result column="radius" jdbcType="INTEGER" property="radius" />
		<result column="time" jdbcType="BIGINT" property="time" />
		<result column="time_stay" jdbcType="INTEGER" property="timeStay" />
		<result column="address" jdbcType="VARCHAR" property="address" />
		<result column="status" jdbcType="INTEGER" property="status" />
		<result column="remark" jdbcType="VARCHAR" property="remark" />
		<result column="creator_id" jdbcType="INTEGER" property="creatorId" />
		<result column="create_time" jdbcType="BIGINT" property="createTime" />
		<result column="updator_id" jdbcType="INTEGER" property="updatorId" />
		<result column="update_time" jdbcType="BIGINT" property="updateTime" />
	</resultMap>

	<sql id="Base_Column_List">
		id, device_id,order_id, longitude, latitude, radius, time,
		time_stay,
		address,
		status, remark, creator_id, create_time, updator_id,
		update_time
	</sql>

	<select id="getByAttribute"
		parameterType="com.winterframework.logistics.common.entity.DeviceLocation"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from lm_device_location
		where true
		<if test="id != null">
			and id = #{id,jdbcType=INTEGER}
		</if>
		<if test="deviceId != null">
			and device_id = #{deviceId,jdbcType=INTEGER}
		</if>
		<if test="orderId != null">
			and order_id = #{orderId,jdbcType=INTEGER}
		</if>
		<if test="longitude != null">
			and longitude = #{longitude,jdbcType=DECIMAL}
		</if>
		<if test="latitude != null">
			and latitude = #{latitude,jdbcType=DECIMAL}
		</if>
		<if test="radius != null">
			and radius = #{radius,jdbcType=INTEGER}
		</if>
		<if test="time != null">
			and time = #{time,jdbcType=BIGINT}
		</if>
		<if test="timeStay != null">
			and time_stay = #{timeStay,jdbcType=INTEGER}
		</if>
		<if test="address != null">
			and address = #{address,jdbcType=VARCHAR}
		</if>
		<if test="status != null">
			and status = #{status,jdbcType=INTEGER}
		</if>
		<if test="remark != null">
			and remark = #{remark,jdbcType=VARCHAR}
		</if>
		<if test="creatorId != null">
			and creator_id = #{creatorId,jdbcType=INTEGER}
		</if>
		<if test="createTime != null">
			and create_time = #{createTime,jdbcType=BIGINT}
		</if>
		<if test="updatorId != null">
			and updator_id = #{updatorId,jdbcType=INTEGER}
		</if>
		<if test="updateTime != null">
			and update_time = #{updateTime,jdbcType=BIGINT}
		</if>
		order by id desc
	</select>

	<select id="getListByOrderId" parameterType="long" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from lm_device_location
		where order_id = #{orderId,jdbcType=INTEGER}
		order by time asc
	</select>

	<select id="getListByArrtibute" parameterType="java.util.List"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from lm_device_location
		where device_id in
		<foreach close=")" collection="list" index="index" item="item"
			open="(" separator=",">
			#{item}
		</foreach>
		order by id asc
	</select>

	<select id="getNewLocation" parameterType="long" resultMap="BaseResultMap">
		SELECT
		<include refid="Base_Column_List" />
		FROM lm_device_location
		where
		time =(
		SELECT time
		FROM lm_device_location
		where order_id = #{orderId,jdbcType=INTEGER}
		ORDER BY time desc
		LIMIT 1)
	</select>

	<select id="getNewLocationList" parameterType="java.util.List"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from (select * from lm_device_location where order_id in
		<foreach close=")" collection="list" index="index" item="item"
			open="(" separator=",">
			#{item}
		</foreach>
  		order by time desc ) a
		GROUP BY order_id
	</select>

	<delete id="delete" parameterType="long">
		delete from lm_device_location
		where id = #{id,jdbcType=INTEGER}
	</delete>

	<insert id="insert"
		parameterType="com.winterframework.logistics.common.entity.DeviceLocation">
		<selectKey keyProperty="id" order="AFTER" resultType="long">
			select
			LAST_INSERT_ID()
		</selectKey>
		insert into lm_device_location
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="deviceId != null">
				device_id,
			</if>
			<if test="orderId != null">
				order_id,
			</if>
			<if test="longitude != null">
				longitude,
			</if>
			<if test="latitude != null">
				latitude,
			</if>
			<if test="radius != null">
				radius,
			</if>
			<if test="time != null">
				time,
			</if>
			<if test="timeStay != null">
				time_stay,
			</if>
			<if test="sourceId != null">
				source_id,
			</if>
			<if test="address != null">
				address,
			</if>
			<if test="status != null">
				status,
			</if>
			<if test="remark != null">
				remark,
			</if>
			<if test="creatorId != null">
				creator_id,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="updatorId != null">
				updator_id,
			</if>
			<if test="updateTime != null">
				update_time,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="deviceId != null">
				#{deviceId,jdbcType=INTEGER},
			</if>
			<if test="orderId != null">
				#{orderId,jdbcType=INTEGER},
			</if>
			<if test="longitude != null">
				#{longitude,jdbcType=DECIMAL},
			</if>
			<if test="latitude != null">
				#{latitude,jdbcType=DECIMAL},
			</if>
			<if test="radius != null">
				#{radius,jdbcType=INTEGER},
			</if>
			<if test="time != null">
				#{time,jdbcType=BIGINT},
			</if>
			<if test="timeStay != null">
				#{timeStay,jdbcType=INTEGER},
			</if>
			<if test="sourceId != null">
				#{sourceId,jdbcType=INTEGER},
			</if>
			<if test="address != null">
				#{address,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				#{status,jdbcType=INTEGER},
			</if>
			<if test="remark != null">
				#{remark,jdbcType=VARCHAR},
			</if>
			<if test="creatorId != null">
				#{creatorId,jdbcType=INTEGER},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=BIGINT},
			</if>
			<if test="updatorId != null">
				#{updatorId,jdbcType=INTEGER},
			</if>
			<if test="updateTime != null">
				#{updateTime,jdbcType=BIGINT},
			</if>
		</trim>
	</insert>

	<update id="update"
		parameterType="com.winterframework.logistics.common.entity.DeviceLocation">
		update lm_device_location
		<set>
			<if test="deviceId != null">
				device_id = #{deviceId,jdbcType=INTEGER},
			</if>
			<if test="orderId != null">
				order_id = #{orderId,jdbcType=INTEGER},
			</if>
			<if test="longitude != null">
				longitude = #{longitude,jdbcType=DECIMAL},
			</if>
			<if test="latitude != null">
				latitude = #{latitude,jdbcType=DECIMAL},
			</if>
			<if test="radius != null">
				radius = #{radius,jdbcType=INTEGER},
			</if>
			<if test="time != null">
				time = #{time,jdbcType=BIGINT},
			</if>
			<if test="timeStay != null">
				time_stay = #{timeStay,jdbcType=INTEGER},
			</if>
			<if test="sourceId != null">
				source_id = #{sourceId,jdbcType=INTEGER},
			</if>
			<if test="address != null">
				address = #{address,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				status = #{status,jdbcType=INTEGER},
			</if>
			<if test="remark != null">
				remark = #{remark,jdbcType=VARCHAR},
			</if>
			<if test="creatorId != null">
				creator_id = #{creatorId,jdbcType=INTEGER},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=BIGINT},
			</if>
			<if test="updatorId != null">
				updator_id = #{updatorId,jdbcType=INTEGER},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime,jdbcType=BIGINT},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>

</mapper>